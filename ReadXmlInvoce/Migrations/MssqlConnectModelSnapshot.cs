// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadXmlInvoce.DB;

#nullable disable

namespace ReadXmlInvoce.Migrations
{
    [DbContext(typeof(MssqlConnect))]
    partial class MssqlConnectModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReadXmlInvoce.Models.Invoice", b =>
                {
                    b.Property<string>("numDock")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dateSell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("numDock");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ReadXmlInvoce.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("invoceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("lp")
                        .HasColumnType("int");

                    b.Property<string>("nameProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("taxVat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("value")
                        .HasColumnType("float");

                    b.Property<double>("valueTax")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("invoceNumber");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ReadXmlInvoce.Models.Product", b =>
                {
                    b.HasOne("ReadXmlInvoce.Models.Invoice", "Invoice")
                        .WithMany("product")
                        .HasForeignKey("invoceNumber")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("ReadXmlInvoce.Models.Invoice", b =>
                {
                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
